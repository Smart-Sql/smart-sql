用 dawn sql 来实现 leetcode

2、给你两个 非空 的链表，表示两个非负的整数。它们每位数字都是按照 逆序 的方式存储的，并且每个节点只能存储 一位 数字。

  请你将两个数相加，并以相同形式返回一个表示和的链表。

  你可以假设除了数字 0 之外，这两个数都不会以 0 开头。

  来源：力扣（LeetCode）
  链接：https://leetcode.cn/problems/add-two-numbers


  解题的思路：
  两个序列，都取第一个值，相加，当取值小于 10 时，就生成包含个位数的序列，如果大于 10 就生成包含个位数和十位数的序列，十位数参与下一次递归。
  返回新计算的序列 和 去除第一个元素剩余的序列

  function add_two_numbers(lst_1: list, lst_2: list, num: int)
  {
      let f_1 = lst_1.first();
      let f_2 = lst_2.first();
      match {
         notNullOrEmpty?(f_1) and nullOrEmpty?(f_2) AND num == 0: lst_1;
         notNullOrEmpty?(f_2) and nullOrEmpty?(f_1) AND num == 0: lst_2;
         notNullOrEmpty?(f_1) and nullOrEmpty?(f_2) AND num <> 0: add_two_numbers(lst_1, [1], 0);
         nullOrEmpty?(f_1) and notNullOrEmpty?(f_2) AND num <> 0: add_two_numbers([1], lst_2, 0);
         nullOrEmpty?(f_1) and nullOrEmpty?(f_2) AND num == 0: [];
         nullOrEmpty?(f_1) and nullOrEmpty?(f_2) AND num <> 0: [num];
         (f_1 + f_2 + num) < 10: concat([(f_1 + f_2 + num)], add_two_numbers(lst_1.rest(), lst_2.rest(), 0));
         (f_1 + f_2 + num) >= 10: concat([(f_1 + f_2 + num) - 10], add_two_numbers(lst_1.rest(), lst_2.rest(), 1));
      }
  }